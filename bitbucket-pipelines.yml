image: andrecastrogarcia/dotnet-sonar:latest

pipelines:
  branches:
    master:
      - step:
          name: Build and Test
          caches:
            - dotnetcore
          script:
            - dotnet restore
            - dotnet /sonar/SonarScanner.MSBuild.dll begin /k:"ducktales" /d:sonar.organization="andre-castro-garcia-bitbucket" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.login="bec3ceeae9799bfdc3a26f99597dc9ca21fe04bc" /d:sonar.cs.opencover.reportsPaths="test/ducktales.tests/coverage/coverage.xml"
            - dotnet build
            - dotnet test /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutputDirectory=coverage /p:Exclude="[NUnit3.*]*" test/ducktales.tests/ducktales.tests.csproj
            - dotnet /sonar/SonarScanner.MSBuild.dll end /d:sonar.login="bec3ceeae9799bfdc3a26f99597dc9ca21fe04bc"
      - step:
          name: Deploy to Docker HUB
          deployment: production
          image: atlassian/pipelines-docker-daemon
          services:
            - docker
          script:
            # Dockerhub Authentication variables
            # set DOCKER_HUB_USERNAME and DOCKER_HUB_PASSWORD as environment variables
            - export DOCKER_HUB_USERNAME=andrecastrogarcia
            - export DOCKER_HUB_PASSWORD=It3r1509
            # Docker variables
            - export IMAGE_NAME="${DOCKER_HUB_USERNAME}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BUILD_NUMBER}"
            # Deploying an image built from pipelines
            - docker build -t "${IMAGE_NAME}" .
            - docker login --username "${DOCKER_HUB_USERNAME}" --password "${DOCKER_HUB_PASSWORD}"
            - docker push "${IMAGE_NAME}"